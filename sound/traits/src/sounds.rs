/// Identifiers for all sfx in game-exe.
#[derive(Debug, Copy, Clone, PartialEq)]
pub enum SfxNum {
    None,
    Pistol,
    Shotgn,
    Sgcock,
    Dshtgn,
    Dbopn,
    Dbcls,
    Dbload,
    Plasma,
    Bfg,
    Sawup,
    Sawidl,
    Sawful,
    Sawhit,
    Rlaunc,
    Rxplod,
    Firsht,
    Firxpl,
    Pstart,
    Pstop,
    Doropn,
    Dorcls,
    Stnmov,
    Swtchn,
    Swtchx,
    Plpain,
    Dmpain,
    Popain,
    Vipain,
    Mnpain,
    Pepain,
    Slop,
    Itemup,
    Wpnup,
    Oof,
    Telept,
    Posit1,
    Posit2,
    Posit3,
    Bgsit1,
    Bgsit2,
    Sgtsit,
    Cacsit,
    Brssit,
    Cybsit,
    Spisit,
    Bspsit,
    Kntsit,
    Vilsit,
    Mansit,
    Pesit,
    Sklatk,
    Sgtatk,
    Skepch,
    Vilatk,
    Claw,
    Skeswg,
    Pldeth,
    Pdiehi,
    Podth1,
    Podth2,
    Podth3,
    Bgdth1,
    Bgdth2,
    Sgtdth,
    Cacdth,
    Skldth,
    Brsdth,
    Cybdth,
    Spidth,
    Bspdth,
    Vildth,
    Kntdth,
    Pedth,
    Skedth,
    Posact,
    Bgact,
    Dmact,
    Bspact,
    Bspwlk,
    Vilact,
    Noway,
    Barexp,
    Punch,
    Hoof,
    Metal,
    Chgun,
    Tink,
    Bdopn,
    Bdcls,
    Itmbk,
    Flame,
    Flamst,
    Getpow,
    Bospit,
    Boscub,
    Bossit,
    Bospn,
    Bosdth,
    Manatk,
    Mandth,
    Sssit,
    Ssdth,
    Keenpn,
    Keendt,
    Skeact,
    Skesit,
    Skeatk,
    Radio,
    NumSfx,
}

impl Default for SfxNum {
    fn default() -> Self {
        Self::None
    }
}

impl From<u8> for SfxNum {
    fn from(i: u8) -> Self {
        if i >= SfxNum::NumSfx as u8 {
            panic!("{} is not a variant of SfxNum", i);
        }
        unsafe { std::mem::transmute(i) }
    }
}
