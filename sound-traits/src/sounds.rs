/// Identifiers for all sfx in game.
#[allow(non_camel_case_types)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub enum SfxEnum {
    None,
    pistol,
    shotgn,
    sgcock,
    dshtgn,
    dbopn,
    dbcls,
    dbload,
    plasma,
    bfg,
    sawup,
    sawidl,
    sawful,
    sawhit,
    rlaunc,
    rxplod,
    firsht,
    firxpl,
    pstart,
    pstop,
    doropn,
    dorcls,
    stnmov,
    swtchn,
    swtchx,
    plpain,
    dmpain,
    popain,
    vipain,
    mnpain,
    pepain,
    slop,
    itemup,
    wpnup,
    oof,
    telept,
    posit1,
    posit2,
    posit3,
    bgsit1,
    bgsit2,
    sgtsit,
    cacsit,
    brssit,
    cybsit,
    spisit,
    bspsit,
    kntsit,
    vilsit,
    mansit,
    pesit,
    sklatk,
    sgtatk,
    skepch,
    vilatk,
    claw,
    skeswg,
    pldeth,
    pdiehi,
    podth1,
    podth2,
    podth3,
    bgdth1,
    bgdth2,
    sgtdth,
    cacdth,
    skldth,
    brsdth,
    cybdth,
    spidth,
    bspdth,
    vildth,
    kntdth,
    pedth,
    skedth,
    posact,
    bgact,
    dmact,
    bspact,
    bspwlk,
    vilact,
    noway,
    barexp,
    punch,
    hoof,
    metal,
    chgun,
    tink,
    bdopn,
    bdcls,
    itmbk,
    flame,
    flamst,
    getpow,
    bospit,
    boscub,
    bossit,
    bospn,
    bosdth,
    manatk,
    mandth,
    sssit,
    ssdth,
    keenpn,
    keendt,
    skeact,
    skesit,
    skeatk,
    radio,
    NumSfx,
}

impl Default for SfxEnum {
    fn default() -> Self {
        Self::None
    }
}

impl From<u8> for SfxEnum {
    fn from(i: u8) -> Self {
        if i > SfxEnum::NumSfx as u8 {
            panic!("{} is not a variant of SfxEnum", i);
        }
        unsafe { std::mem::transmute(i) }
    }
}

pub const MUSIC: [&str; 68] = [
    "", "e1m1", "e1m2", "e1m3", "e1m4", "e1m5", "e1m6", "e1m7", "e1m8", "e1m9", "e2m1", "e2m2",
    "e2m3", "e2m4", "e2m5", "e2m6", "e2m7", "e2m8", "e2m9", "e3m1", "e3m2", "e3m3", "e3m4", "e3m5",
    "e3m6", "e3m7", "e3m8", "e3m9", "inter", "intro", "bunny", "victor", "introa", "runnin",
    "stalks", "countd", "betwee", "doom", "the_da", "shawn", "ddtblu", "in_cit", "dead", "stlks2",
    "theda2", "doom2", "ddtbl2", "runni2", "dead2", "stlks3", "romero", "shawn2", "messag",
    "count2", "ddtbl3", "ampie", "theda3", "adrian", "messg2", "romer2", "tense", "shawn3",
    "openin", "evil", "ultima", "read_m", "dm2ttl", "dm2int",
];
